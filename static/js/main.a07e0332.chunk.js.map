{"version":3,"sources":["components/Input.jsx","components/Form.jsx","components/App.jsx","index.js"],"names":["Input","props","name","value","onChange","type","placeholder","Form","useState","isMousedOver","setMouseOver","fName","lName","fullName","setfullName","handleChange","event","target","prevValue","className","register","style","backgroundColor","onMouseOver","onMouseOut","currentTime","Date","getHours","console","log","App","ReactDOM","render","document","getElementById"],"mappings":"iKAaeA,MAXf,SAAeC,GACb,OACE,uBACEC,KAAMD,EAAMC,KACZC,MAAOF,EAAME,MACbC,SAAUH,EAAMG,SAChBC,KAAMJ,EAAMI,KACZC,YAAaL,EAAMK,eCsEVC,MA5Ef,SAAcN,GAAQ,IAAD,EACkBO,oBAAS,GAD3B,mBACZC,EADY,KACEC,EADF,OAGaF,mBAAS,CACvCG,MAAO,GACPC,MAAO,KALU,mBAGZC,EAHY,KAGFC,EAHE,KAQnB,SAASC,EAAaC,GAAQ,IAAD,EACHA,EAAMC,OAAtBd,EADmB,EACnBA,MAAOD,EADY,EACZA,KAEfY,GAAY,SAACI,GACX,MAAa,UAAThB,EACK,CACLS,MAAOR,EACPS,MAAOM,EAAUN,OAED,UAATV,EACF,CACLS,MAAOO,EAAUP,MACjBC,MAAOT,QAHJ,KAoBX,OACE,uBAAMgB,UAAU,OAAhB,UACE,+BACGN,EAASF,MADZ,IACoBE,EAASD,SAE7B,cAAC,EAAD,CACEP,KAAK,OACLH,KAAK,QACLC,MAAOU,EAASF,MAChBL,YAAY,aACZF,SAAUW,IAGZ,cAAC,EAAD,CACEV,KAAK,OACLH,KAAK,QACLC,MAAOU,EAASD,MAChBN,YAAY,YACZF,SAAUW,IAGZ,cAAC,EAAD,CAAOV,KAAK,WAAWC,YAAY,cAEjCL,EAAMmB,UACN,cAAC,EAAD,CAAOf,KAAK,WAAWC,YAAY,qBAGrC,wBACEe,MAAO,CAAEC,gBAAiBb,EAAe,QAAU,SACnDc,YArCN,WACEb,GAAa,IAqCTc,WAlCN,WACEd,GAAa,IAkCTL,KAAK,SAJP,SAMGJ,EAAMmB,SAAW,QAAU,iBCtE9BK,EAAc,IAAIC,KAAK,KAAM,EAAG,EAAG,IAAIC,WAC7CC,QAAQC,IAAIJ,GAYGK,MARf,WACE,OACE,qBAAKX,UAAU,YAAf,SACE,cAAC,EAAD,CAAMC,SALW,UCFvBW,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a07e0332.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Input(props) {\n  return (\n    <input\n      name={props.name}\n      value={props.value}\n      onChange={props.onChange}\n      type={props.type}\n      placeholder={props.placeholder}\n    />\n  );\n}\nexport default Input;\n","import React, { useState } from \"react\";\nimport Input from \"./Input\";\n\nfunction Form(props) {\n  const [isMousedOver, setMouseOver] = useState(false);\n\n  const [fullName, setfullName] = useState({\n    fName: \"\",\n    lName: \"\",\n  });\n\n  function handleChange(event) {\n    const { value, name } = event.target;\n\n    setfullName((prevValue) => {\n      if (name === \"fName\") {\n        return {\n          fName: value,\n          lName: prevValue.lName,\n        };\n      } else if (name === \"lName\") {\n        return {\n          fName: prevValue.fName,\n          lName: value,\n        };\n      }\n    });\n\n    // console.log(newValue);\n    // console.log(inputName);\n  }\n\n  function handleOver() {\n    setMouseOver(true);\n  }\n\n  function handleOut() {\n    setMouseOver(false);\n  }\n\n  return (\n    <form className=\"form\">\n      <h1>\n        {fullName.fName} {fullName.lName}\n      </h1>\n      <Input\n        type=\"text\"\n        name=\"fName\"\n        value={fullName.fName}\n        placeholder=\"First Name\"\n        onChange={handleChange}\n      />\n\n      <Input\n        type=\"text\"\n        name=\"lName\"\n        value={fullName.lName}\n        placeholder=\"Last Name\"\n        onChange={handleChange}\n      />\n\n      <Input type=\"password\" placeholder=\"Password\" />\n\n      {!props.register && (\n        <Input type=\"password\" placeholder=\"Confirm Password\" />\n      )}\n\n      <button\n        style={{ backgroundColor: isMousedOver ? \"black\" : \"white\" }}\n        onMouseOver={handleOver}\n        onMouseOut={handleOut}\n        type=\"submit\"\n      >\n        {props.register ? \"Login\" : \"Register\"}\n      </button>\n    </form>\n  );\n}\n\nexport default Form;\n","import React from \"react\";\nimport Form from \"./Form\";\n\nconst currentTime = new Date(2020, 1, 1, 21).getHours();\nconsole.log(currentTime);\n\nvar userIsRegistered = true;\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Form register={userIsRegistered} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}